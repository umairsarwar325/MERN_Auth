npm i express cookie-parser mailtrap bcryptjs dotenv jsonwebtoken mongoose crypto

-> backend:
  - mailtrap configuration (backend/mailtrap/)

-> frontend:
  - Routing(react-router-dom)
    - in main.jsx
        <BrowserRouter>
          <App />
        </BrowserRouter>
    - in App.jsx
        <Routes>
          <Route path="/" element={"Home"} />
          <Route path="/signup" element={<SignUpPage />} />
          <Route path="/login" element={<LoginPage />} />
          <Route path="/verify-email" element={<EmailVerificationPage />} />
        </Routes>
  - Store(zustand)
    - in store/authStore.js
        import { create } from "zustand";
        import axios from "axios";

        const API_URL = "http://localhost:5000/api/auth";
        export const useAuthStore = create((set) => ({
          user: null,
          isAthenticated: false,
          error: null,
          isLoading: false,
          isCheckingAuth: true,

          signup: async (email, name, password) => {
            set({ isLoading: true, error: null });
            try {
              const response = await axios.post(`${API_URL}/signup`, {
                email,
                password,
                name,
              });
              set({ user: response.data.user, isAthenticated: true, isLoading: false });
            } catch (error) {
              set({ isLoading: false, error: error.response.data.message || "Error singing up" });
              throw error;
            }
          },
        }));
    - in AnyFile.jsx
        import { useAuthStore } from "../store/authStore";

        const { signup, error, isLoading } = useAuthStore();
      